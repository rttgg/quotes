package quotes;/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.*;
import java.util.ArrayList;

import static org.junit.Assert.*;

public class AppTest {


    @Test public void testForAnAuthor() throws FileNotFoundException {

        String filePath = "./src/main/resources/internetquotes.json";
        Quote[] quotes = App.getQuotesFrom(filePath);
        String randomQuote = App.getQuotes(quotes).toString();
        assertTrue(randomQuote.contains("Author"));

    }

    @Test public void testForText() throws FileNotFoundException {
        String filePath = "./src/main/resources/internetquotes.json";
        Quote[] quotes = App.getQuotesFrom(filePath);
        String randomQuote = App.getQuotes(quotes).toString();
        assertTrue(randomQuote.contains("Quote"));
    }

    @Test public void testFromInternetOrFile() throws IOException {
        String anyQuote = App.getRandomQuoteFromWeb();
        assertNotNull("return any quote from int or file", anyQuote);
        }


    @Test public void testWriteToFile() throws IOException{
        String filepath = "./src/main/resources/internetquotes.json";
        Quote[] quotes = App.getQuotesFrom(filepath);
        int numberOfQuotes = quotes.length;
        String newQuote = App.getRandomQuoteFromWeb();
        Quote[] quotesNew = App.getQuotesFrom(filepath);
        int currentNumberOfQuotes = quotesNew.length;
        int curr = numberOfQuotes + 1;
        assertEquals("New quote", curr, currentNumberOfQuotes);

    }

    @Test public void testQuoteAlreadyInFile() throws IOException {
        String filePath = "./src/main/resources/internetquotes.json";
        Quote[] quotes = App.getQuotesFrom(filePath);
        int numberOfQuotes = quotes.length;
        QuoteFromInternet ran = new QuoteFromInternet();
        ran.setQuoteText("hello");
        ran.setQuoteAuthor("Roman");
        App.writeQuoteToFile(ran);
        Quote[] quotesNew = App.getQuotesFrom(filePath);
        int currentNumberOfQuotes = quotesNew.length;
        assertEquals("Quotes, quote", numberOfQuotes, currentNumberOfQuotes);
    }

    @Test public void testQuoteNotInFile() throws IOException{
        JsonReader reader = new JsonReader(new FileReader("./src/main/resources/internetquotes.json"));
        ArrayList<Quote> quotes = new Gson().fromJson(reader, new TypeToken<ArrayList<Quote>>(){
        }.getType());
        boolean isPresent = App.quotesInFile(quotes,"We are what.");

        assertFalse("nvjenrvijfnjvdfniv not found.", isPresent);
    }

    @Test public void testForRandomNumber() throws FileNotFoundException{
        String filePath = "./src/main/resources/internetquote.json";
        Gson gson = new Gson();
        JsonReader reader = new JsonReader(new FileReader(filePath));
        Quote[] quotes = gson.fromJson(reader, Quote[].class);
        int newRandom = (int) (Math.random() * quotes.length);
        int high = quotes.length - 1;
        int low = 0;
        assertTrue("Error, randome is high", high >= newRandom);
        assertTrue("Error, randome is low", low <= newRandom);
    }
}