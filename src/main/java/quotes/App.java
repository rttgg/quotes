package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import com.google.gson.stream.JsonReader;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public static void main(String[] args) throws IOException {

        String newQuote = getRandomQuoteFromWeb();
        System.out.println(newQuote);
    }
    //Gets a random quotes from the Formismatic API
    public static String getRandomQuoteFromWeb() throws IOException {

        // Get internet quote and save to file / get file quote if error
        String outPutQuote = "";
        try {
            // Sends a GET request to Forismatic
            URL url = new URL("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            // Saves the response as a string
            BufferedReader response = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String responseToString = response.readLine();
            response.close();

            QuoteFromInternet newQuote = new Gson().fromJson(responseToString, QuoteFromInternet.class);
            writeQuoteToFile(newQuote);
            outPutQuote = "From internet\n" + newQuote.toString();
        } catch (IOException error) {
            Quote[] quotes = getQuotesFrom("./src/main/resources/internetquotes.json");
            outPutQuote = "From file\n" + getQuotes(quotes) .toString();
        }
        return outPutQuote;
    }

        public static Quote[] getQuotesFrom(String filePath) throws FileNotFoundException {
            Gson gson = new Gson();
            JsonReader reader = new JsonReader(new FileReader(filePath));
            Quote[] quotes = gson.fromJson(reader, Quote[].class);
            return quotes;


        }

        public static Quote getQuotes(Quote[] quotes) {
            int ranRandom = (int) (Math.random() * quotes.length);
            return quotes[ranRandom];

        }

    public static void writeQuoteToFile(QuoteFromInternet newQuote) throws IOException {
        Quote checkQuote = new Quote();
        checkQuote.setText(newQuote.getQuoteText());
        checkQuote.setAuthor(newQuote.getQuoteAuthor());
        checkQuote.setLikes("");
        checkQuote.setTags(new String[0]);
        Gson gson = new Gson();
        JsonReader reader = new JsonReader(new FileReader("src/main/resources/internetQuotes.json"));
        ArrayList<Quote> quotes = gson.fromJson(reader, new TypeToken<ArrayList<Quote>>(){

        }.getType());

        boolean isPresent = quotesInFile(quotes, newQuote.getQuoteText());
        if (!isPresent) {
            quotes.add(checkQuote);
            String writeAllQuotes = gson.toJson(quotes);
            BufferedWriter writer = new BufferedWriter(new FileWriter("src/main/resources/internetQuotes.json"));
            writer.write(writeAllQuotes);
            writer.close();

    }


        }

public static boolean quotesInFile(ArrayList<Quote> quotes,String quoteText){
    return (boolean) quotes.stream()
//            .anyMatch(randomQuote -> randomQuote.getText()
//            .equals(quoteText));

    .filter(randomQuote -> randomQuote.getText()
            .equals(quoteText))
            .findFirst()
            .isPresent();



}
}